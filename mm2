-- Load Rayfield UI
loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Murder Mystery 2 | Summer GUI",
    LoadingTitle = "Loading...",
    LoadingSubtitle = "Key System Enabled",
    ConfigurationSaving = {
        Enabled = false
    },
    Discord = {
        Enabled = false
    },
    KeySystem = true,
    KeySettings = {
        Title = "MM2 | Summer GUI Key",
        Subtitle = "Key System",
        Note = "Get the key by clicking the button below.",
        FileName = "MM2KeySave",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = { "DSgEsHjtrJTRfgjYTFGJ" },
        KeyInputFinished = function(Key)
            print("Correct Key Entered:", Key)
        end,
        IncorrectKey = function(Key)
            print("Wrong Key:", Key)
        end,
        KeyGrabber = function()
            setclipboard("https://link-center.net/1172605/cCrJvCxM7JIG")
            Rayfield:Notify({
                Title = "Key Copied",
                Content = "The link to get your key was copied to your clipboard!",
                Duration = 6
            })
        end
    }
})


local MainTab = Window:CreateTab("Main", 4483362458)

local autoFarmEnabled = false
local autoResetEnabled = false
local disableRenderEnabled = false
local antiAFKUsed = false

-- Toggle: Auto Farm
MainTab:CreateToggle({
    Name = "Auto Farm Coins",
    CurrentValue = false,
    Callback = function(Value)
        autoFarmEnabled = Value
    end,
})

-- Toggle: Auto Reset
MainTab:CreateToggle({
    Name = "Auto Reset",
    CurrentValue = false,
    Callback = function(Value)
        autoResetEnabled = Value
    end,
})

-- Toggle: Disable Render
MainTab:CreateToggle({
    Name = "Disable 3D Rendering",
    CurrentValue = false,
    Callback = function(Value)
        disableRenderEnabled = Value
        game:GetService("RunService"):Set3dRenderingEnabled(not Value)
    end,
})

-- Button: Anti-AFK
MainTab:CreateButton({
    Name = "Enable Anti-AFK",
    Callback = function()
        if not antiAFKUsed then
            antiAFKUsed = true
            loadstring(game:HttpGet("https://pastebin.com/raw/bwP4bmed"))()
        end
    end,
})

-- Time in game label (Rayfield doesn't support dynamic text natively, so use a notification)
task.spawn(function()
    local startTime = tick()
    while true do
        local delta = math.floor(tick() - startTime)
        local d, h, m, s = math.floor(delta / 86400), math.floor(delta % 86400 / 3600), math.floor(delta % 3600 / 60), delta % 60
        Rayfield:Notify({
            Title = "Play Time",
            Content = string.format("Time in game: %dd %02dh %02dm %02ds", d, h, m, s),
            Duration = 5
        })
        task.wait(60)
    end
end)

-- Farming logic copied from your script
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer

local CoinCollected = ReplicatedStorage.Remotes.Gameplay.CoinCollected
local RoundStart = ReplicatedStorage.Remotes.Gameplay.RoundStart
local RoundEnd = ReplicatedStorage.Remotes.Gameplay.RoundEndFade

local farming = false
local bag_full = false
local resetting = false
local start_position = nil

player.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

local function getCharacter() return player.Character or player.CharacterAdded:Wait() end
local function getHRP() return getCharacter():WaitForChild("HumanoidRootPart") end

CoinCollected.OnClientEvent:Connect(function(_, current, max)
    if current == max and not resetting and autoResetEnabled then
        resetting = true
        bag_full = true
        local hrp = getHRP()
        if start_position then
            local tween = TweenService:Create(hrp, TweenInfo.new(2, Enum.EasingStyle.Linear), {CFrame = start_position})
            tween:Play()
            tween.Completed:Wait()
        end
        task.wait(0.5)
        player.Character.Humanoid.Health = 0
        player.CharacterAdded:Wait()
        task.wait(1.5)
        resetting = false
        bag_full = false
    end
end)

RoundStart.OnClientEvent:Connect(function()
    farming = true
    start_position = getHRP().CFrame
end)

RoundEnd.OnClientEvent:Connect(function()
    farming = false
end)

local function get_nearest_coin()
    local hrp = getHRP()
    local closest, dist = nil, math.huge
    for _, m in pairs(workspace:GetChildren()) do
        if m:FindFirstChild("CoinContainer") then
            for _, coin in pairs(m.CoinContainer:GetChildren()) do
                if coin:IsA("BasePart") and coin:FindFirstChild("TouchInterest") then
                    local d = (hrp.Position - coin.Position).Magnitude
                    if d < dist then closest, dist = coin, d end
                end
            end
        end
    end
    return closest, dist
end

task.spawn(function()
    while true do
        if autoFarmEnabled and farming and not bag_full then
            local coin, dist = get_nearest_coin()
            if coin then
                local hrp = getHRP()
                if dist > 150 then
                    hrp.CFrame = coin.CFrame
                else
                    local tween = TweenService:Create(hrp, TweenInfo.new(dist / 20, Enum.EasingStyle.Linear), {CFrame = coin.CFrame})
                    tween:Play()
                    repeat task.wait() until not coin:FindFirstChild("TouchInterest") or not farming or not autoFarmEnabled
                    tween:Cancel()
                end
            end
        end
        task.wait(0.2)
    end
end)
